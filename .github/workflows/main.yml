name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

    workflow_dispatch:

jobs:
    build-windows:
        runs-on: windows-2022

        steps:
            - uses: actions/checkout@v2
              with:
                submodules: true

            - name: MSVC environment
              uses: ilammy/msvc-dev-cmd@v1

            - name: Install Chocolatey packages
              run: |
                choco install meson vulkan-sdk
                refreshenv
                echo "$env:PATH" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

            - name: Generate build files
              run: meson out\win --backend ninja

            - name: Build
              run: meson compile out\win

            - name: Add artifacts to folder
              run: |
                  mkdir build
                  xcopy /y out\win\engine\engine.dll build\engine.dll
                  xcopy /y out\win\demo\demo.exe build
                  xcopy /i/y deps\licenses build\licenses
                  copy LICENSE build\licenses\purpl.txt
                  @"@echo off
                  set PATH=%PATH%;%~dp0;%~dp0\bin

                  %~dp0\demo.exe
                  pause"@ | Add-Content build\purpl-demo.bat

            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: build-windows
                  path: build

            - name: Create zip of artifacts for release
              run: |
                  "$Env:PROGRAMFILES\7-Zip\7z.exe a -tzip build-windows.zip build\*"

            - name: Create release with artifacts
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: build-windows.zip

    build-macos:
        runs-on: macos-latest

        steps:
            - uses: actions/checkout@v2
              with:
                submodules: true

            - name: Set permissions on executables
              run: chmod a+x tools/ninja

            - name: Install Homebrew packages
              run: brew install meson sdl2

            - name: Generate build files
              run: meson out/mac --backend ninja

            - name: Build
              run: tools/ninja -C out/mac -j$[$(sysctl -n hw.ncpu) + 2]

            - name: Add artifacts to folder
              run: |
                  mkdir build
                  printf '#!/usr/bin/env bash\n\nchmod a+x demo\nexportHERE="$(dirname "$0")"\n\nDYLD_LIBRARY_PATH=$HERE/bin:$HERE $HERE/demo\n' > build/purpl-demo
                  cp -r out/mac/{engine/libengine.dylib,demo/demo} deps/licenses build
                  cp LICENSE build/licenses/purpl.txt

            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: build-macos
                  path: build

            - name: Create zip of artifacts for release
              run: |
                  7z a -tzip build-macos.zip build/*

            - name: Create release with artifacts
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: build-macos.zip

    build-linux:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
              with:
                submodules: true

            - name: Setup APT packages
              run: |
                  wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
                  sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.204-focal.list https://packages.lunarg.com/vulkan/1.3.204/lunarg-vulkan-1.3.204-focal.list
                  sudo apt-get update -qq
                  sudo apt-get install -y gcc-multilib python3 curl meson
                  sudo apt-get install -y --no-install-recommends libsdl2-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev vulkan-sdk

            - name: Set permissions on executables
              run: chmod a+x tools/ninja

            - name: Generate build files
              run: meson out/linux --backend ninja

            - name: Build
              run: tools/ninja -C out/linux -j$[$(nproc) + 2]

            - name: Add artifacts to folder
              run: |
                  mkdir build
                  printf '#!/usr/bin/env bash\n\nchmod a+x demo\nexportHERE="$(dirname "$0")"\n\nLD_LIBRARY_PATH=$HERE/bin:$HERE $HERE/demo\n' > build/purpl-demo
                  cp -r out/linux/{engine/libengine.so,demo/demo} deps/licenses build
                  cp LICENSE build/licenses/purpl.txt

            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: build-linux
                  path: build

            - name: Create zip of artifacts for release
              run: |
                  7z a -tzip build-linux.zip build/*

            - name: Create release with artifacts
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: build-linux.zip
