# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-2022

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@v1.10.0

      - name: Build dependencies
        run: python tools\deps.py

      # Runs a single command using the runners shell
      - name: Generate build files
        run: tools\gn gen out

      - name: Build
        run: tools\ninja -C out

      - name: Add artifacts to folder
        run: |
          mkdir build
          xcopy /y out\engine.dll build
          xcopy /y out\main.exe build
          xcopy /y deps\bin\* build
          xcopy /i/y deps\licenses build\licenses

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-windows
          path: build

  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access itset.html#expressions
      - uses: actions/checkout@v2

      - name: Setup APT packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ninja-build gcc-multilib python3 curl
          sudo apt-get install -y --no-install-recommends libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libgl1-mesa-dev

      - name: Set permissions on executables
        run: |
          chmod a+x tools/deps.py
          chmod a+x tools/gn

      - name: Build dependencies
        run: tools/deps.py

      # Runs a single command using the runners shell
      - name: Generate build files
        run: tools/gn gen out
        
      - name: Build
        run: ninja -C out -j$[`nproc` + 2]

      - name: Add artifacts to folder
        run: |
          mkdir build
          printf '#!/usr/bin/env bash\nLD_LIBRARY_PATH=. ./main\n' > build/purpl-demo
          cp -r out/{engine.so,main} deps/bin/* deps/licenses build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-linux
          path: build
