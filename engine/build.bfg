#  Targets for the main engine library
#
#  Copyright 2022 MobSlicer152
#  This file is part of Purpl Engine
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

import os
import platform

deps_dir = f"../deps/{platform.system()}-{platform.machine()}".lower()

winsdk_lib_dir = (
    os.getenv("WindowsSdkDir")
    + "/lib/"
    + os.getenv("WindowsSDKVersion")
    + "/um/"
    + (
        f"{platform.machine()}".lower()
        .replace("x86_64", "x64")
        .replace("amd64", "x64")
        .replace("aarch64", "arm64")
    )
)

deps_includes = header_directory(
    f"{deps_dir}/include",
    include="**/*.h",
)
engine_includes = header_directory("include", include="**/*.h")

if platform.system() == "Windows":
    libs = [
        f"{deps_dir}/bin/cglm.lib",
        "{winsdk_lib_dir}/kernel32.lib",
        f"{deps_dir}/bin/SDL2.lib",
    ]
elif platform.system() == "Darwin":
    libs = [f"{deps_dir}/bin/libcglm.dylib", f"{deps_dir}/bin/libSDL2-2.0.dylib"]
elif platform.system() == "Linux":
    libs = [f"{deps_dir}/bin/libcglm.so", f"{deps_dir}/bin/libSDL2-2.0.so"]

engine = shared_library(
    "engine",
    [
        "src/core/globals.c",
        "src/core/init.c",
        "src/core/log.c",
        "src/util/error.c",
        "src/util/fs.c",
        "src/util/misc.c",
        "src/util/stb.c",
        "src/util/string.c",
    ],
    includes=[deps_includes, engine_includes],
    libs=libs,
    compile_options=[
        opts.define("PURPL_BUILD", "1"),
        opts.define("PURPL_DEBUG", str(int(bool(argv.debug)))),
        opts.define("PURPL_ENABLE_MEMING", str(int(bool(argv.enable_meming)))),
        options,
    ],
)

export(includes=engine_includes, lib=engine)
